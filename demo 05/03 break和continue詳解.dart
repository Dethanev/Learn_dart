/*
break 語句的功能：
1. 在 switch 語句中使用，使流程跳出 switch 結構。
2. 在迴圈語句中使用，使流程跳出當前迴圈，遇到 break 後，該迴圈結束，後續代碼不再執行。

【強調】：
1. 如果在迴圈中已經執行了 break 語句，則不會執行 break 之後的循環體內語句。
2. 在多層巢狀迴圈中，一個 break 語句只能跳出**最內層**的一層迴圈。

✅ break 可用於：
- switch-case 語句中
- for 迴圈中
- while 迴圈中

--------------------------------------------------------------------------------

continue 語句的功能：

1. 只在迴圈語句中使用。
2. 表示**跳過本次迴圈的剩餘語句，直接進入下一次判斷／迭代**。
3. continue 後面的語句不會執行，但整個迴圈本身不會終止（不像 break）。

⚠️ 注意：
- continue 可以用在 for 迴圈與 while 迴圈中。
- **但不建議在 while 迴圈中濫用 continue**，因為可能不小心造成死迴圈（如忘記更新條件變數）。

---

範例：

// for迴圈的break 範例
for (int i = 0; i < 5; i++) {
  if (i == 3) break;  //💥「直接跳出整個迴圈」，後面都不跑了
  print(i);  // 輸出：0, 1, 2
}

// for迴圈的continue 範例
for (int i = 0; i < 5; i++) {
  if (i == 2) continue;  // 🔁「跳過這一輪剩下的程式」，直接「回到迴圈頂部
  print(i);  // 輸出：0, 1, 3, 4 （跳過 2）
}
*/
