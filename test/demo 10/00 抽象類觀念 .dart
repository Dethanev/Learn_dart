/*
⭐ 思維筆記：為什麼直接用抽象類就好 ⭐

很多人會以為要先寫一個「基礎父類」，再看需要哪些功能固定，再讓子類擴充。
但其實仔細想想，父類的本質，就是要給子類「擴充」用的。


✅ 所以，直接寫一個「抽象類」作為模板（規範），讓子類去依照需求各自實作、覆寫，這樣更清楚、更簡潔。

- 抽象類 = 規範、模板、約定
- 子類 = 實際行為實作、擴充

💬 結論：
「抽象類就是要先定義一個規範給子類遵循，然後子類再根據這個模板自由擴充。」

這樣邏輯更乾淨，程式碼也更好維護！
*/

/*
🧠 Dart extends / abstract / implements 總結
- extends: 單繼承，會拿到邏輯
- abstract: 規範，不能 new，可混合邏輯
- implements: 接口，必須自己實作，不繼承邏輯，可多個
*/
